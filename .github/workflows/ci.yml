name: ci

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_config:
          - { cc: gcc, cxx: g++, version: 11 }
          - { cc: gcc, cxx: g++, version: 10 }
          - { cc: gcc, cxx: g++, version: 9 }
          - { cc: gcc, cxx: g++, version: 8 }
          - { cc: gcc, cxx: g++, version: 7 }
          - { cc: clang, cxx: clang++, version: 12 }
          - { cc: clang, cxx: clang++, version: 11 }
          - { cc: clang, cxx: clang++, version: 10 }
          - { cc: clang, cxx: clang++, version: 9 }
          - { cc: gcc, cxx: g++, version: 10, args: "-DDEFLATE_SUPPORT=OFF" }
    env:
      CC: ${{ matrix.build_config.cc }}-${{ matrix.build_config.version }}
      CXX: ${{ matrix.build_config.cxx }}-${{ matrix.build_config.version }}
      JOBS: 2
    name: "${{ matrix.build_config.cc }}-${{ matrix.build_config.version }} ${{ matrix.build_config.args }}"
    steps:
      - uses: actions/checkout@main
      - name: Setup Clang
        if: matrix.build_config.cc == 'clang'
        run: |
          sudo scripts/ci_setup_clang.sh ${{ matrix.build_config.version }}
          echo "CXXFLAGS=-stdlib=libc++" >> $GITHUB_ENV
      - name: Setup GCC
        if: matrix.build_config.cc == 'gcc'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-${{ matrix.build_config.version }} g++-${{ matrix.build_config.version }}
      - name: Setup
        run: sudo apt-get install -y valgrind
      - name: Build
        run: |
          cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release -DCOVERAGE=ON ${{ matrix.build_config.args }}
          cmake --build build -- -j${JOBS}
      - name: Test
        run: |
          cd build
          cmake --build . --target test
          ctest -D ExperimentalBuild -j${JOBS}
          ctest -D ExperimentalMemCheck -j${JOBS}
          bash <(curl -s https://codecov.io/bash)
  build_msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        build_config:
          - {args: "-DDEFLATE_SUPPORT=OFF", config: "Debug"}
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Build
        run: |
            cmake . -Bbuild ${{ matrix.build_config.args }}
            cmake --build build --parallel --config ${{ matrix.build_config.config }}
      - name: Test
        run: |
            cd build
            ctest -C ${{ matrix.build_config.config }}
